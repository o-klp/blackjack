// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

window.App = (function(_super) {
  __extends(App, _super);

  function App() {
    return App.__super__.constructor.apply(this, arguments);
  }

  App.prototype.initialize = function() {
    var deck;
    this.set('deck', deck = new Deck());
    this.set('playerHand', deck.dealPlayer());
    this.set('dealerHand', deck.dealDealer());
    return this.get('playerHand').on('stand', (function(_this) {
      return function() {
        return _this.calculateScores();
      };
    })(this));
  };

  App.prototype.calculateScores = function() {
    var dealerScore, playerScore;
    playerScore = this.get('playerHand').scores();
    this.get('dealerHand').models[0].flip();
    dealerScore = this.get('dealerHand').scores();
    return this.checkDealerScore(dealerScore);
  };

  App.prototype.checkDealerScore = function(dealerScore) {
    if (dealerScore < 17 && dealerScore.length !== 2) {
      this.get('dealerHand').hit();
      return this.checkDealerScore(this.get('dealerHand').scores());
    } else {
      if (dealerScore[1] > 17 && dealerScore[1] < 22) {
        return this.checkDealerScore(dealerScore[1]);
      } else {
        return this.checkDealerScore(dealerScore[0]);
      }
    }
  };

  return App;

})(Backbone.Model);
